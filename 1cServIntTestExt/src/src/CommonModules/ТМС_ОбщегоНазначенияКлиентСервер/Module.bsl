////////////////////////////////////////////////////////////////////////////////
// ОБЩИЙ МОДУЛЬ ТМС_ОБЩЕГОНАЗНАЧЕНИЯКЛИЕНТСЕРВЕР
//
// Модуль содержит общие функции и процедуры, которые могут быть использованы
// как на клиенте, так и на сервере в рамках функциональности ТМС.
//
// Copyright (c) 2025 rzateev
// 
// Этот файл является частью проекта 1cServiceIntegrationMock,
// распространяемого под лицензией MIT.
// Подробности см. в файле LICENSE в корне проекта.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РаботаСПользователем

// Выводит краткое сообщение пользователю.
// Может быть привязано к конкретному полю формы.
//
// Параметры:
//  Текст - Строка - Текст сообщения для вывода пользователю
//  Поле - Строка - Поле, в котором есть ошибка (необязательный)
//
Процедура СообщениеПользователю(Текст, Поле = "") Экспорт
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	
	Если НЕ ПустаяСтрока(Поле) Тогда
		Сообщение.Поле = Поле;
	КонецЕсли;
	
	Сообщение.Сообщить();
	
КонецПроцедуры

#КонецОбласти

#Область ВалидацияДанных

// Проверяет наличие обязательных полей в структуре параметров.
// Выполняет валидацию типа входящих параметров и заполненности обязательных полей.
//
// Параметры:
//  Параметры - Структура - Структура для проверки
//  ОбязательныеПоля - Массив - Массив строк с именами обязательных полей
//
// Исключения:
//  Генерирует исключение, если входящие параметры некорректны или обязательные поля не заполнены
//
Процедура ПроверитьОбязательныеПоля(Знач Параметры, Знач ОбязательныеПоля) Экспорт
	
	Если ТипЗнч(Параметры) <> Тип("Структура") Тогда
		ВызватьИсключение "Параметр 'Параметры' должен быть структурой";
	КонецЕсли;
	
	Для Каждого Поле Из ОбязательныеПоля Цикл
		Если НЕ Параметры.Свойство(Поле) ИЛИ НЕ ЗначениеЗаполнено(Параметры[Поле]) Тогда
			ВызватьИсключение СтрШаблон("Обязательное поле '%1' не заполнено в параметрах", Поле);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСоСтруктурами

// Безопасно получает значение из вложенной структуры или соответствия.
// Поддерживает получение значений по составному пути через точку.
//
// Параметры:
//  Объект - Структура, Соответствие - Исходный объект для извлечения значения
//  Путь - Строка - Путь к значению через точку (например, "data._id")
//  ЗначениеПоУмолчанию - Произвольный - Возвращаемое значение при отсутствии искомого значения
//
// Возвращаемое значение:
//  Произвольный - Найденное значение или значение по умолчанию
//
Функция БезопасноПолучитьЗначение(Знач Объект, Знач Путь, Знач ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	// Проверка типа входящего объекта
	Если ТипЗнч(Объект) <> Тип("Структура") И ТипЗнч(Объект) <> Тип("Соответствие") Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	// Разбор пути на составные части
	ЧастиПути = СтрРазделить(Путь, ".");
	ТекущийОбъект = Объект;
	
	// Последовательное извлечение значений по пути
	Для Каждого Часть Из ЧастиПути Цикл
		Если ТипЗнч(ТекущийОбъект) = Тип("Структура") Тогда
			Если НЕ ТекущийОбъект.Свойство(Часть) Тогда
				Возврат ЗначениеПоУмолчанию;
			КонецЕсли;
			ТекущийОбъект = ТекущийОбъект[Часть];
		ИначеЕсли ТипЗнч(ТекущийОбъект) = Тип("Соответствие") Тогда
			Если ТекущийОбъект.Получить(Часть) = Неопределено Тогда
				Возврат ЗначениеПоУмолчанию;
			КонецЕсли;
			ТекущийОбъект = ТекущийОбъект.Получить(Часть);
		Иначе
			Возврат ЗначениеПоУмолчанию;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТекущийОбъект;
	
КонецФункции

#КонецОбласти
#КонецОбласти 
